{"remainingRequest":"/Users/zhangjun/Documents/workspace/test-space/paolu/GrooveUI/groove-zhiwu/node_modules/thread-loader/dist/cjs.js!/Users/zhangjun/Documents/workspace/test-space/paolu/GrooveUI/groove-zhiwu/node_modules/babel-loader/lib/index.js!/Users/zhangjun/Documents/workspace/test-space/paolu/GrooveUI/groove-zhiwu/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangjun/Documents/workspace/test-space/paolu/GrooveUI/groove-zhiwu/src/class/vegetable/Potato.js","dependencies":[{"path":"/Users/zhangjun/Documents/workspace/test-space/paolu/GrooveUI/groove-zhiwu/src/class/vegetable/Potato.js","mtime":1632292220650},{"path":"/Users/zhangjun/Documents/workspace/test-space/paolu/GrooveUI/groove-zhiwu/node_modules/cache-loader/dist/cjs.js","mtime":1589375722521},{"path":"/Users/zhangjun/Documents/workspace/test-space/paolu/GrooveUI/groove-zhiwu/node_modules/thread-loader/dist/cjs.js","mtime":1589375722540},{"path":"/Users/zhangjun/Documents/workspace/test-space/paolu/GrooveUI/groove-zhiwu/node_modules/babel-loader/lib/index.js","mtime":1607483830637},{"path":"/Users/zhangjun/Documents/workspace/test-space/paolu/GrooveUI/groove-zhiwu/node_modules/eslint-loader/index.js","mtime":1589375721213}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvemhhbmdqdW4vRG9jdW1lbnRzL3dvcmtzcGFjZS90ZXN0LXNwYWNlL3Bhb2x1L0dyb292ZVVJL2dyb292ZS16aGl3dS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy96aGFuZ2p1bi9Eb2N1bWVudHMvd29ya3NwYWNlL3Rlc3Qtc3BhY2UvcGFvbHUvR3Jvb3ZlVUkvZ3Jvb3ZlLXpoaXd1L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfZ2V0IGZyb20gIi9Vc2Vycy96aGFuZ2p1bi9Eb2N1bWVudHMvd29ya3NwYWNlL3Rlc3Qtc3BhY2UvcGFvbHUvR3Jvb3ZlVUkvZ3Jvb3ZlLXpoaXd1L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9nZXQiOwppbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gIi9Vc2Vycy96aGFuZ2p1bi9Eb2N1bWVudHMvd29ya3NwYWNlL3Rlc3Qtc3BhY2UvcGFvbHUvR3Jvb3ZlVUkvZ3Jvb3ZlLXpoaXd1L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9nZXRQcm90b3R5cGVPZiI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL1VzZXJzL3poYW5nanVuL0RvY3VtZW50cy93b3Jrc3BhY2UvdGVzdC1zcGFjZS9wYW9sdS9Hcm9vdmVVSS9ncm9vdmUtemhpd3Uvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvVXNlcnMvemhhbmdqdW4vRG9jdW1lbnRzL3dvcmtzcGFjZS90ZXN0LXNwYWNlL3Bhb2x1L0dyb292ZVVJL2dyb292ZS16aGl3dS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9Vc2Vycy96aGFuZ2p1bi9Eb2N1bWVudHMvd29ya3NwYWNlL3Rlc3Qtc3BhY2UvcGFvbHUvR3Jvb3ZlVUkvZ3Jvb3ZlLXpoaXd1L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgQm9keSBmcm9tICdAL2NsYXNzL0JvZHknOwppbXBvcnQgc3RvcmUgZnJvbSAnLi4vLi4vc3RvcmUnOwppbXBvcnQgKiBhcyBQSVhJIGZyb20gJ3BpeGkuanMnOwoKdmFyIFBvdGF0byA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0JvZHkpIHsKICBfaW5oZXJpdHMoUG90YXRvLCBfQm9keSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoUG90YXRvKTsKCiAgZnVuY3Rpb24gUG90YXRvKHByb3BzKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBvdGF0byk7CgogICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcyk7CiAgICBfdGhpcy5uYW1lID0gJ+Wcn+ixhuWimSc7CiAgICBfdGhpcy5oZWFsdGggPSAzMDA7CiAgICBzdG9yZS5jb21taXQoJ2Nvc3QnLCB7CiAgICAgIGNvc3Q6IFBvdGF0by5jb3N0CiAgICB9KTsKICAgIF90aGlzLnRleHR1cmUgPSBQSVhJLlRleHR1cmUuZnJvbShyZXF1aXJlKCcuLi8uLi9hc3NldHMvdmVnZXRhYmxlL1BvdGF0by5naWYnKSk7CiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoUG90YXRvLCBbewogICAga2V5OiAiaW5pdFNwcml0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdFNwcml0ZSgpIHsKICAgICAgdGhpcy5zcHJpdGUgPSBuZXcgUElYSS5TcHJpdGUodGhpcy50ZXh0dXJlKTsKICAgICAgdGhpcy5zcHJpdGUud2lkdGggPSAzOTsKICAgICAgdGhpcy5zcHJpdGUuaGVpZ2h0ID0gNDY7CiAgICB9CiAgfSwgewogICAga2V5OiAibW91bnRTcHJpdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1vdW50U3ByaXRlKHgsIHkpIHsKICAgICAgdGhpcy5zcHJpdGUueCA9IDM5ICogeTsKICAgICAgdGhpcy5zcHJpdGUueSA9IDQ2ICogeDsKICAgICAgdGhpcy5ldmVudC5lbWl0KCdtb3VudCcsIHRoaXMpOwogICAgfQogIH0sIHsKICAgIGtleTogInN0YXJ0V29yayIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc3RhcnRXb3JrKCkgewogICAgICBfZ2V0KF9nZXRQcm90b3R5cGVPZihQb3RhdG8ucHJvdG90eXBlKSwgInN0YXJ0V29yayIsIHRoaXMpLmNhbGwodGhpcyk7CiAgICB9CiAgfSwgewogICAga2V5OiAid29yayIsCiAgICB2YWx1ZTogZnVuY3Rpb24gd29yaygpIHsKICAgICAgY29uc29sZS5sb2coJ+WTpuWQvCDmiJHmmK/lnJ/osYblopknKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBQb3RhdG87Cn0oQm9keSk7CgpfZGVmaW5lUHJvcGVydHkoUG90YXRvLCAiY29zdCIsIDEwMCk7CgpleHBvcnQgeyBQb3RhdG8gYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/Users/zhangjun/Documents/workspace/test-space/paolu/GrooveUI/groove-zhiwu/src/class/vegetable/Potato.js"],"names":["Body","store","PIXI","Potato","props","name","health","commit","cost","texture","Texture","from","require","sprite","Sprite","width","height","x","y","event","emit","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,KAAKC,IAAZ,MAAsB,SAAtB;;IACqBC,M;;;;;AAGnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,IAAL,GAAY,KAAZ;AACA,UAAKC,MAAL,GAAc,GAAd;AACAL,IAAAA,KAAK,CAACM,MAAN,CAAa,MAAb,EAAqB;AAAEC,MAAAA,IAAI,EAAEL,MAAM,CAACK;AAAf,KAArB;AACA,UAAKC,OAAL,GAAeP,IAAI,CAACQ,OAAL,CAAaC,IAAb,CAAkBC,OAAO,CAAC,mCAAD,CAAzB,CAAf;AALiB;AAMlB;;;;WAED,sBAAa;AACX,WAAKC,MAAL,GAAc,IAAIX,IAAI,CAACY,MAAT,CAAgB,KAAKL,OAArB,CAAd;AACA,WAAKI,MAAL,CAAYE,KAAZ,GAAoB,EAApB;AACA,WAAKF,MAAL,CAAYG,MAAZ,GAAqB,EAArB;AACD;;;WACD,qBAAYC,CAAZ,EAAeC,CAAf,EAAkB;AAChB,WAAKL,MAAL,CAAYI,CAAZ,GAAgB,KAAKC,CAArB;AACA,WAAKL,MAAL,CAAYK,CAAZ,GAAgB,KAAKD,CAArB;AACA,WAAKE,KAAL,CAAWC,IAAX,CAAgB,OAAhB,EAAyB,IAAzB;AACD;;;WAED,qBAAY;AACV;AACD;;;WAED,gBAAO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;;;;EA5BiCtB,I;;gBAAfG,M,UACL,G;;SADKA,M","sourcesContent":["import Body from '@/class/Body'\nimport store from '../../store'\nimport * as PIXI from 'pixi.js'\nexport default class Potato extends Body {\n  static cost = 100\n\n  constructor(props) {\n    super(props)\n    this.name = '土豆墙'\n    this.health = 300\n    store.commit('cost', { cost: Potato.cost })\n    this.texture = PIXI.Texture.from(require('../../assets/vegetable/Potato.gif'))\n  }\n\n  initSprite() {\n    this.sprite = new PIXI.Sprite(this.texture)\n    this.sprite.width = 39\n    this.sprite.height = 46\n  }\n  mountSprite(x, y) {\n    this.sprite.x = 39 * y\n    this.sprite.y = 46 * x\n    this.event.emit('mount', this)\n  }\n\n  startWork() {\n    super.startWork()\n  }\n\n  work() {\n    console.log('哦吼 我是土豆墙')\n  }\n}\n"]}]}